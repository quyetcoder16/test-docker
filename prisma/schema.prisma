generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  comment_id   Int       @id @default(autoincrement())
  user_id      Int?
  image_id     Int?
  date_comment DateTime? @db.Date
  content      String?   @db.VarChar(255)
  users        users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_1")
  images       images?   @relation(fields: [image_id], references: [image_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([image_id], map: "image_id")
  @@index([user_id], map: "user_id")
}

model images {
  image_id         Int           @id @default(autoincrement())
  image_name       String?       @db.VarChar(255)
  url              String?       @db.VarChar(255)
  commenting_right Boolean?
  description      String?       @db.VarChar(255)
  user_id          Int?
  title            String?       @db.VarChar(255)
  link_web_detail  String?       @db.VarChar(255)
  comments         comments[]
  users            users?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "images_ibfk_1")
  savedImages      savedImages[]

  @@index([user_id], map: "user_id")
}

model savedImages {
  savedImage_id Int       @id @default(autoincrement())
  user_id       Int?
  image_id      Int?
  date_saved    DateTime? @db.Date
  users         users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "savedImages_ibfk_1")
  images        images?   @relation(fields: [image_id], references: [image_id], onDelete: NoAction, onUpdate: NoAction, map: "savedImages_ibfk_2")

  @@index([image_id], map: "image_id")
  @@index([user_id], map: "user_id")
}

model users {
  user_id        Int           @id @default(autoincrement())
  email          String?       @db.VarChar(255)
  password       String?       @db.VarChar(255)
  full_name      String?       @db.VarChar(255)
  age            Int?
  avatar         String?       @db.VarChar(255)
  introduce      String?       @db.VarChar(255)
  link_user_info String?       @db.VarChar(255)
  user_name      String?       @db.VarChar(255)
  comments       comments[]
  images         images[]
  savedImages    savedImages[]
}
